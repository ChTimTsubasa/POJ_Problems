#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;

char cipher[1000];
char revres[25][1000];
char crib[22];

int main() {
	int n;
	scanf("%d",&n);
	while(n--){
		int gs;
		scanf("%d", &gs);
		int yygs = 0;
		char c;
		while(yygs < gs){
			c = getchar();
			if(c >= 'A' && c <= 'Z'){
				cipher[yygs] = c;
				yygs++;
			}
		}
		cipher[gs] = '\0';
		crib[0] = '\0';
		int cribLen;
		while((cribLen = strlen(crib)) == 0){
			scanf("%s", crib);
		}
		bool ky = false;
		for(int s = 1; s <= 25; s++){
			for(int i = 0; i < cribLen; i++){
				crib[i]++;
				if(crib[i] == 'Z'+1){
					crib[i] = 'A';
				}
			}
			for(int m = 5; m <= 20; m++){
				char *tmp = revres[m];
				if(s == 1){
					//reverse it
					int revGs = gs / m;
					for(int i = 0; i < revGs; i++){
						int mi = m*i;
						for(int j = 0; j < m; j++){
							tmp[mi+j] = cipher[mi+m-1-j];
						}
					}
					int ks = revGs * m;
					int dy = gs - ks;
					if(dy){
						for(int i = 0; i < dy; i++){
							tmp[ks+i] = cipher[ks+dy-1-i];
						}
					}
					tmp[gs] = '\0';
				}
				if(strstr(tmp, crib)){
					ky = true;
					printf("%d %d\n", s, m);
					goto done;
				}
			}
		}
		done:
		if(!ky){
			printf("Crib is not encrypted.\n");
		}
	}
	return 0;
}
